name: Deploy to AWS lambda functions

on:
  ## push:
    ## paths:
      ## https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
  workflow_dispatch

env:
  AWS_REGION: "us-east-1"

jobs:
  build_publish_deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for updated images
        id: updated-images
        run: |
          UPDATED=$(git diff --name-only HEAD^ HEAD)
          UPDATED_PIPELINE_IMAGES=$(echo "$UPDATED" | grep -o '+_pipeline/[^/]\+/' | uniq)
          UPDATED_SOLVER_IMAGES=$(echo "$UPDATED" | grep -o '+_olver/' | uniq)
          UPDATED_IMAGES="$UPDATED_PIPELINE_IMAGES $UPDATED_SOLVER_IMAGES"
          
          if [ -n "$UPDATED_IMAGES" ]; then
            echo "These images have been updated:"
            echo "$UPDATED_IMAGES"
          else
            echo "No Docker images have been updated. Skipping deployment."
            exit 0
          fi
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ISA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ISA_ACCESS_KEY_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag & publish Docker image to AWS ECR
        env:
          UPDATED_IMAGES: ${{ steps.updated-images.outputs.UPDATED_IMAGES }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Iterate over each updated Docker image
          IFS=$'\n' # Set the internal field separator to newline
          ############# this assumes each path in UPDATED_IMAGES is on a new line
          ########### do i need to add ${{ github.workspace }}/ for the root dir at the start of each path in UPDATED_IMAGES variable?
          
          for PATH in $UPDATED_IMAGES; do
            # Check whether Dockerfile exists
            if test -f "$PATH/Dockerfile"; then
            
              # Build & push the Docker image
              docker build \
                -f "$PATH"/Dockerfile \
                -t $ECR_REGISTRY/$(basename "$PATH"):$IMAGE_TAG \
                -e RDS_HOST=${{ secrets.AWS_RDS_HOST }} \
                -e DB_NAME=${{ secrets.AWS_RDS_DB_NAME }} \
                -e USER_NAME=${{ secrets.AWS_RDS_USER_NAME }} \
                -e PASSWORD=${{ secrets.AWS_RDS_PASSWORD }} \
                .
              docker push $ECR_REGISTRY/$(basename "$PATH"):$IMAGE_TAG
              
            else
              echo "Dockerfile not found in $PATH. Skipping build for this image."
            fi
          done
          
      - name: Deploy the latest ECR image to its Lambda function
        env:
          UPDATED_IMAGES: ${{ steps.updated-images.outputs.UPDATED_IMAGES }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Iterate for each updated Docker image
          IFS=$'\n' # Set the internal field separator to newline
          ######### this assumes each path in UPDATED_IMAGES is on a new line
          ########### do i need to add ${{ github.workspace }}/ for the root dir at the start of each path in UPDATED_IMAGES variable?

          ######## does the aws isa user have the credentials to update lambda functions?
          for PATH in $UPDATED_IMAGES; do
            # Update Lambda function with the latest ECR image
            aws lambda update-function-code \
            --function-name $(basename "$PATH") \
            --image-uri $ECR_REGISTRY/$(basename "$PATH"):$IMAGE_TAG
          done